<div>
    <comps:Header></comps:Header>
    <div class="o-container-sm">
      <div class="o-detail-layout">
        <div class="o-layout-detail" vg-for='_, item := range c.MovieStorage'>
          <img
            class="c-movie--poster-big"
            :src="item.Genre"
            alt=""
          />
          <div class="c-detail-rating">
            <div>
              <div class="c-detail-titlesection">
                <p class="c-detail--title" vg-content='item.Title'>Don't Look Up</p>
                <span style="margin-bottom: 2rem;">
                  <span class="c-detail--in" vg-content='item.ReleaseDate'></span>
                  <span class="c-detail--in">, </span>
                  <span class="c-detail--in" vg-content='item.Description'></span>
                  <span class="c-detail--in">, </span>
                  <span class="c-detail--in" vg-content='item.Length'></span>
                </span>
              </div>
  
              <div class="c-detail-mainsection">
                <div class="c-detail-section">
                  <p class="c-detail--rating" vg-content='item.Likes'></p>
                  <p class="c-detail--text">Likes</p>
                </div>
                <div class="c-detail-section">
                  <p class="c-detail--rating" vg-content='item.Likes'></p>
                  <p class="c-detail--text">Comments</p>
                </div>
                <div class="c-detail-section">
                  <p class="c-detail--rating" vg-content='rand.Intn(100 - 40) + 40'></p>
                  <p class="c-detail--text">Score</p>
                </div>
              </div>
            </div>
            
            <div class="o-likes-layout">
              <button class="o-button-reset c-button-like">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="#000000"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M18 15l-6-6-6 6" />
                </svg>
                <p class="c-button-like--text">Like</p>
              </button>
              <button class="o-button-reset c-button-like">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="#000000"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M6 9l6 6 6-6" />
                </svg>
                <p class="c-button-like--text">Dislike</p>
              </button>
            </div>
          </div>
        </div>

        <div class="c-commentbox">
          <textarea
            class="c-commentbox-input"
            name=""
            id=""
            cols="30"
            rows="10"
            placeholder="Type your review..."
          ></textarea>
          <div class="o-layout-commentbox">
            <div></div>
            <div class="o-layout-commentbox--btn">
              <button class="c-commentbox-cancel o-button-reset">Cancel</button>
              <button class="c-commentbox-post o-button-reset">Post</button>
            </div>
          </div>
        </div>
        <div class="c-detail-reviews">
          <div class="c-review">
            <div class="o-layout-user">
              <p class="c-review-user">woutvc</p>
              <p class="c-review-date">18/01/2022 - 21:32</p>
            </div>
            <div>
              Imagine just chilling there, taking a nap, enjoying the ride.
              Suddenly there comes somebody from the other direction, that had
              the same amazing idea. But both you are either napping totally
              unaware of the situation. And either if one was aware and braked,
              you would still crash.
            </div>
            <div class="o-layout-commentbtns">
              <button class="o-button-reset c-commentbox-cancel" style="font-size: 0.875rem;">Reply</button>
              <button class="o-button-reset c-button-like--comment">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="#000000"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M18 15l-6-6-6 6" />
                </svg>
                <p class="c-button-like--text">10</p>
              </button>
              <button class="o-button-reset c-button-like--comment">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="#000000"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M6 9l6 6 6-6" />
                </svg>
                <p class="c-button-like--text">3</p>
              </button>
            </div>
            
          </div>
          <div class="c-review">
            <div class="o-layout-user">
              <p class="c-review-user">woutvc</p>
              <p class="c-review-date">18/01/2022 - 21:32</p>
            </div>
            <div>
              Imagine just chilling there, taking a nap, enjoying the ride.
              Suddenly there comes somebody from the other direction, that had
              the same amazing idea. But both you are either napping totally
              unaware of the situation. And either if one was aware and braked,
              you would still crash.
            </div>
            <div class="o-layout-commentbtns">
              <button class="o-button-reset c-commentbox-cancel" style="font-size: 0.875rem;">Reply</button>
              <button class="o-button-reset c-button-like--comment">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="#000000"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M18 15l-6-6-6 6" />
                </svg>
                <p class="c-button-like--text">10</p>
              </button>
              <button class="o-button-reset c-button-like--comment">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="#000000"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M6 9l6 6 6-6" />
                </svg>
                <p class="c-button-like--text">3</p>
              </button>
            </div>
            
          </div>
        </div>
      </div>
    </div>
</div>


<script type="application/x-go">


import (
    "github.com/vugu-examples/taco-store/ui/comps"
    "github.com/shurcooL/graphql"
    "log"
    "fmt"
    "math/rand"
)

type Details struct {
  vgrouter.NavigatorRef
  tokenMovieId, tokenLogin string

  MovieStorage []struct {
      ID graphql.String `graphql:"id"`
      Title graphql.String `graphql:"title"`
      Genre graphql.String `graphql:"genre"`
      ImgUrl graphql.String `graphql:"imgUrl"`
      Description graphql.String `graphql:"description"`
      ReleaseDate graphql.Int `graphql:"releaseDate"`
      Length graphql.String `graphql:"length"`
      Likes graphql.Int `graphql:"likes"`
      Comments graphql.Int `graphql:"comments"`
    }
}

var q_moviebyid struct {
  Movies []struct {
    ID graphql.String `graphql:"id"`
		Title graphql.String `graphql:"title"`
		Genre graphql.String `graphql:"genre"`
		ImgUrl graphql.String `graphql:"imgUrl"`
		Description graphql.String `graphql:"description"`
		ReleaseDate graphql.Int `graphql:"releaseDate"`
		Length graphql.String `graphql:"length"`
		Likes graphql.Int `graphql:"likes"`
		Comments graphql.Int `graphql:"comments"`
  } `graphql:"movieById(id: $id)"`
}

func (c *Details) Init(ctx vugu.InitCtx) { 
  c.tokenMovieId = js.Global().Get("localStorage").Call("getItem", "movieItem").String()
  log.Println(c.tokenMovieId, "token movie in details")
  c.tokenLogin = js.Global().Get("localStorage").Call("getItem", "token").String()
  go func() {
    client := graphql.NewClient("http://localhost:8080/query", nil)

    variables := map[string]interface{}{
		  "id":   graphql.ID(c.tokenMovieId),
	  } 

    err := client.Query(context.Background(), &q_moviebyid, variables)
    if err != nil {
      fmt.Println(err)
    }

    ctx.EventEnv().Lock()

    fmt.Println(q_moviebyid.Movies)

    c.MovieStorage = q_moviebyid.Movies
    log.Println(c.MovieStorage, "data for detailpage")

    ctx.EventEnv().UnlockRender()
  }()
  
  log.Println(c.tokenLogin, "detail token storage")
    if c.tokenLogin == "<null>" {
      ctx.EventEnv().Lock()
      c.Navigate("/", nil)
      ctx.EventEnv().UnlockRender()
  }
}

</script>
